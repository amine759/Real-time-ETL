name: Scala CI/CD

on:
  push:
    branches: 
      - "main"
  pull_request:
    branches: 
      - "main"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [producer, kstream, consumer]  # Microservices list

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up JDK 11
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'sbt'
    # 3. Set up SBT
    - name: Set up SBT
      uses: olafurpg/setup-scala@v10
      with:
        sbt-version: '1.10.2'  # Ensure this matches your build.properties

    # 4. Cache SBT dependencies
    - name: Cache SBT dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.ivy2/cache
          ~/.sbt
          ~/.coursier
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}-${{ hashFiles('**/project/plugins.sbt') }}
        restore-keys: |
          ${{ runner.os }}-sbt-
    # Change working directory to microservice folder and run tests
    - name: Run tests 
      working-directory: ./kafka-streams
      run: sbt test
        
    - name: Build the project
      working-directory: ./kafka-streams
      run: sbt assembly
#
    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push Docker image for each microservice
    - name: Build and push ${{ matrix.service }} image
      run: |
        docker build -t ${{ secrets.DOCKER_USER }}/${{ matrix.service }}-service:latest -f ./kafka-streams/${{ matrix.service }}/Dockerfile ./kafka-streams
        docker push ${{ secrets.DOCKER_USER }}/${{ matrix.service }}-service:latest
